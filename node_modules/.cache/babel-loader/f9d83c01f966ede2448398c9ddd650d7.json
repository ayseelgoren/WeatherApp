{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayse.elgoren\\\\Desktop\\\\React\\\\weather-app\\\\src\\\\Components\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useWeather } from \"../Context/WeatherContext\";\nimport axios from \"axios\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { useCity } from \"../Context/CityContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const {\n    setWeathers\n  } = useWeather();\n  const {\n    city\n  } = useCity();\n  useEffect(() => {//getCoordinate()\n  }, [city]);\n\n  const getCoordinate = async () => {\n    await axios(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`).then(res => {\n      console.log(res.data.coord);\n      getWeatherData(res.data.coord.lon, res.data.coord.lat);\n    });\n  };\n\n  const getWeatherData = async (lon, lat) => {\n    await axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely,current&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`).then(res => {\n      console.log(res.data.daily); //setWeathersList([...weathersList,res.data.daily])\n      //setWeather([...weather,res.data.daily]);\n\n      setWeathers(res.data.daily);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: new Date(Date.now()).getUTCDay()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: new Intl.DateTimeFormat('tr-TR', {\n            weekday: 'long'\n          }).format(new Date(Date.now()).getUTCDay())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"ptkXaEG5png7ZRIgJfFYv5iEE7I=\", false, function () {\n  return [useWeather, useCity];\n});\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/ayse.elgoren/Desktop/React/weather-app/src/Components/Weather.js"],"names":["React","useEffect","useWeather","axios","Button","Card","useCity","Weather","setWeathers","city","getCoordinate","then","res","console","log","data","coord","getWeatherData","lon","lat","daily","width","Date","now","getUTCDay","Intl","DateTimeFormat","weekday","format"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,SAAQC,OAAR,QAAsB,wBAAtB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,UAAU,EAAjC;AACA,QAAM;AAACO,IAAAA;AAAD,MAAWH,OAAO,EAAxB;AAEAL,EAAAA,SAAS,CAAC,MAAI,CACV;AACH,GAFQ,EAEP,CAACQ,IAAD,CAFO,CAAT;;AAIA,QAAMC,aAAa,GAAG,YAAY;AAC9B,UAAMP,KAAK,CAAE,qDAAoDM,IAAK,iDAA3D,CAAL,CACDE,IADC,CACKC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAArB;AACAC,MAAAA,cAAc,CAACL,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAeE,GAAhB,EAAoBN,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAeG,GAAnC,CAAd;AACH,KAJC,CAAN;AAMH,GAPD;;AASA,QAAMF,cAAc,GAAG,OAAOC,GAAP,EAAWC,GAAX,KAAmB;AACtC,UAAMhB,KAAK,CAAE,uDAAsDgB,GAAI,QAAOD,GAAI,iFAAvE,CAAL,CACDP,IADC,CACKC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASK,KAArB,EADW,CAEX;AACA;;AAEAZ,MAAAA,WAAW,CAACI,GAAG,CAACG,IAAJ,CAASK,KAAV,CAAX;AAEH,KARC,CAAN;AASH,GAVD;;AAWA,sBACI;AAAA,2BAEI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,8BACI,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,KAAlB;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAa,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,SAArB;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAa,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAjC,EAAqDC,MAArD,CAA4D,IAAIN,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,SAArB,EAA5D;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAOI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA9CQjB,O;UACkBL,U,EACNI,O;;;KAFZC,O;AAgDT,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useWeather} from \"../Context/WeatherContext\";\r\nimport axios from \"axios\";\r\nimport {Button, Card} from \"react-bootstrap\";\r\nimport {useCity} from \"../Context/CityContext\";\r\n\r\nfunction Weather() {\r\n    const { setWeathers} = useWeather();\r\n    const {city, } = useCity();\r\n\r\n    useEffect(()=>{\r\n        //getCoordinate()\r\n    },[city])\r\n\r\n    const getCoordinate = async () => {\r\n        await axios(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`)\r\n            .then((res) => {\r\n                console.log(res.data.coord)\r\n                getWeatherData(res.data.coord.lon,res.data.coord.lat)\r\n            }\r\n        )\r\n    }\r\n\r\n    const getWeatherData = async (lon,lat) => {\r\n        await axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely,current&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`)\r\n            .then((res) => {\r\n                console.log(res.data.daily)\r\n                //setWeathersList([...weathersList,res.data.daily])\r\n                //setWeather([...weather,res.data.daily]);\r\n\r\n                setWeathers(res.data.daily)\r\n\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src=\"\" />\r\n                <Card.Body>\r\n                    <Card.Title>{new Date(Date.now()).getUTCDay()}</Card.Title>\r\n                    <Card.Title>{new Intl.DateTimeFormat('tr-TR', { weekday: 'long'}).format(new Date(Date.now()).getUTCDay())}</Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk of\r\n                        the card's content.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\">Go somewhere</Button>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}