{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayse.elgoren\\\\Desktop\\\\React\\\\weather-app\\\\src\\\\Components\\\\FormCity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { cities } from '../api/cities';\nimport { useCity } from \"../Context/CityContext\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormCity() {\n  _s();\n\n  const {\n    city,\n    setCity\n  } = useCity();\n  useEffect(() => {\n    console.log(city);\n    cities.map(i => {\n      console.log(i.toLowerCase() === city.toLowerCase());\n    });\n    localStorage.setItem(\"city\", city.toLowerCase());\n  }, [city]);\n\n  function handleChange(e) {\n    console.log(e.target.value);\n    setCity(e.target.value);\n  }\n\n  cities.map(i => {// console.log(i.toLowerCase(),\" - \",i.toLowerCase() === city.toLowerCase(),\" - \",city.toLowerCase())\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form.Select, {\n      name: \"city\",\n      onChange: e => handleChange(e),\n      children: cities.map((cit, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cit,\n        selected: localStorage.getItem(\"city\") === city,\n        children: cit\n      }, cit, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormCity, \"A1UI1rIQwN8Dis/xloOEYnnTntU=\", false, function () {\n  return [useCity];\n});\n\n_c = FormCity;\nexport default FormCity;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCity\");","map":{"version":3,"sources":["C:/Users/ayse.elgoren/Desktop/React/weather-app/src/Components/FormCity.js"],"names":["React","useEffect","cities","useCity","Form","FormCity","city","setCity","console","log","map","i","toLowerCase","localStorage","setItem","handleChange","e","target","value","cit","index","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAAQC,OAAR,QAAsB,wBAAtB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBJ,OAAO,EAA/B;AACJF,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAJ,IAAAA,MAAM,CAACQ,GAAP,CAAYC,CAAD,IAAK;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,WAAF,OAAoBN,IAAI,CAACM,WAAL,EAAhC;AACH,KAFD;AAGAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BR,IAAI,CAACM,WAAL,EAA5B;AACH,GANQ,EAMP,CAACN,IAAD,CANO,CAAT;;AAQI,WAASS,YAAT,CAAsBC,CAAtB,EAAyB;AACrBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACC,MAAF,CAASC,KAArB;AACAX,IAAAA,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAEDhB,EAAAA,MAAM,CAACQ,GAAP,CAAYC,CAAD,IAAK,CACb;AACF,GAFD;AAGA,sBACI;AAAA,2BACI,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,QAAQ,EAAGK,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAtD;AAAA,gBAEQd,MAAM,CAACQ,GAAP,CAAW,CAACS,GAAD,EAAMC,KAAN,kBACP;AAAkB,QAAA,KAAK,EAAED,GAAzB;AAA8B,QAAA,QAAQ,EAAEN,YAAY,CAACQ,OAAb,CAAqB,MAArB,MAA+Bf,IAAvE;AAAA,kBAA8Ea;AAA9E,SAAaA,GAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA9BQd,Q;UACmBF,O;;;KADnBE,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {cities} from '../api/cities';\r\nimport {useCity} from \"../Context/CityContext\";\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nfunction FormCity() {\r\n    const {city, setCity} = useCity();\r\nuseEffect(()=>{\r\n    console.log(city)\r\n    cities.map((i)=>{\r\n        console.log(i.toLowerCase() === city.toLowerCase())\r\n    })\r\n    localStorage.setItem(\"city\",city.toLowerCase())\r\n},[city])\r\n\r\n    function handleChange(e) {\r\n        console.log(e.target.value)\r\n        setCity(e.target.value)\r\n    }\r\n\r\n    cities.map((i)=>{\r\n       // console.log(i.toLowerCase(),\" - \",i.toLowerCase() === city.toLowerCase(),\" - \",city.toLowerCase())\r\n    })\r\n    return (\r\n        <div>\r\n            <Form.Select name=\"city\" onChange={(e) => handleChange(e)}>\r\n                {\r\n                    cities.map((cit, index) => (\r\n                        <option key={cit} value={cit} selected={localStorage.getItem(\"city\")===city}>{cit}</option>\r\n                    ))\r\n                }\r\n            </Form.Select>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormCity;"]},"metadata":{},"sourceType":"module"}