{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayse.elgoren\\\\Desktop\\\\React\\\\weather-app\\\\src\\\\Context\\\\CityContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityContext = /*#__PURE__*/createContext();\nexport const CityProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [city, setCity] = useState(\"\");\n  const values = {\n    city,\n    setCity\n  };\n  return /*#__PURE__*/_jsxDEV(CityContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CityProvider, \"NjhooW53FpaNk4X2HDZYlDFe0P4=\");\n\n_c = CityProvider;\nexport const useCity = () => {\n  _s2();\n\n  return useContext(CityContext);\n};\n\n_s2(useCity, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CityProvider\");","map":{"version":3,"sources":["C:/Users/ayse.elgoren/Desktop/React/weather-app/src/Context/CityContext.js"],"names":["createContext","useContext","useState","CityContext","CityProvider","children","city","setCity","values","useCity"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAkD,OAAlD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,MAAMI,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMM,MAAM,GAAG;AAACF,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAf;AACA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,MAA7B;AAAA,cAAsCH;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CALM;;GAAMD,Y;;KAAAA,Y;AAOb,OAAO,MAAMK,OAAO,GAAG;AAAA;;AAAA,SAAMR,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAhB;;IAAMM,O","sourcesContent":["import {createContext, useContext, useState} from \"react\";\r\n\r\nconst CityContext = createContext();\r\n\r\nexport const CityProvider = ({children}) => {\r\n    const [city, setCity] = useState(\"\");\r\n\r\n    const values = {city, setCity};\r\n    return (<CityContext.Provider value={values}>{children}</CityContext.Provider>);\r\n}\r\n\r\nexport const useCity = () => useContext(CityContext);"]},"metadata":{},"sourceType":"module"}