{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayse.elgoren\\\\Desktop\\\\Patika.dev\\\\weather-app\\\\src\\\\Components\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useWeather } from \"../Context/WeatherContext\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\nimport { useCity } from \"../Context/CityContext\";\nimport { Alert } from 'bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const {\n    weathers,\n    setWeathers\n  } = useWeather();\n  const {\n    city\n  } = useCity();\n  const [show, setShow] = useState(false);\n\n  const getCoordinate = async () => {\n    await axios(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`).then(res => {\n      getWeatherData(res.data.coord.lon, res.data.coord.lat);\n    });\n  };\n\n  useEffect(() => {\n    getCoordinate();\n  });\n\n  const getWeatherData = async (lon, lat) => {\n    await axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=imperial&exclude=hourly,minutely,current&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`).then(res => {\n      setShow(false);\n      setWeathers(res.data.daily);\n    }).catch(err => {\n      setShow(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"if (show) \", /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This is a danger alert\\u2014check it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }, this), weathers.map((weather, i) => /*#__PURE__*/_jsxDEV(Card, {\n      style: i === 1 ? {\n        width: '9.5rem'\n      } : {\n        width: \"10.5rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\"   \", new Date(weather.dt * 1000).toLocaleString(\"en-EN\", {\n            weekday: \"long\"\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: \"https://openweathermap.org/img/wn/\" + weather.weather[0].icon + \"@2x.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [weather.temp.day + \"°\", \"\\u2002\", weather.clouds + \"°\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weather.weather[0].description.toLowerCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Weather, \"bnWSEU4VZlDbgxzSUXXW84MHAjg=\", false, function () {\n  return [useWeather, useCity];\n});\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/ayse.elgoren/Desktop/Patika.dev/weather-app/src/Components/Weather.js"],"names":["React","useEffect","useState","useWeather","axios","Card","useCity","Alert","Weather","weathers","setWeathers","city","show","setShow","getCoordinate","then","res","getWeatherData","data","coord","lon","lat","daily","catch","err","map","weather","i","width","Date","dt","toLocaleString","weekday","icon","temp","day","clouds","description","toLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,OAAR,QAAsB,wBAAtB;AACA,SAASC,KAAT,QAAsB,WAAtB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BP,UAAU,EAA1C;AACA,QAAM;AAACQ,IAAAA;AAAD,MAASL,OAAO,EAAtB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMY,aAAa,GAAG,YAAY;AAC9B,UAAMV,KAAK,CAAE,qDAAoDO,IAAK,iDAA3D,CAAL,CACDI,IADC,CACKC,GAAD,IAAS;AACXC,MAAAA,cAAc,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAeC,GAAhB,EAAoBJ,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAeE,GAAnC,CAAd;AACH,KAHC,CAAN;AAKH,GAND;;AAOApB,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,aAAa;AAChB,GAFQ,CAAT;;AAIA,QAAMG,cAAc,GAAG,OAAOG,GAAP,EAAWC,GAAX,KAAmB;AACtC,UAAMjB,KAAK,CAAE,uDAAsDiB,GAAI,QAAOD,GAAI,gGAAvE,CAAL,CACDL,IADC,CACKC,GAAD,IAAS;AACXH,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAH,MAAAA,WAAW,CAACM,GAAG,CAACE,IAAJ,CAASI,KAAV,CAAX;AACH,KAJC,EAICC,KAJD,CAIQC,GAAD,IAAO;AACZX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KANC,CAAN;AAOH,GARD;;AAUA,sBACI;AAAA,0CAGmB;AAAK,MAAA,KAAK,EAAC,oBAAX;AAAgC,MAAA,IAAI,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHnB,EAQKJ,QAAQ,CAACgB,GAAT,CAAa,CAACC,OAAD,EAASC,CAAT,kBAEN,QAAC,IAAD;AAAc,MAAA,KAAK,EAAEA,CAAC,KAAK,CAAN,GAAU;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAV,GAA8B;AAACA,QAAAA,KAAK,EAAC;AAAP,OAAnD;AAAA,6BACI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,4BAAgB,IAAIC,IAAJ,CAASH,OAAO,CAACI,EAAR,GAAa,IAAtB,EAA4BC,cAA5B,CAA2C,OAA3C,EAAoD;AAChEC,YAAAA,OAAO,EAAE;AADuD,WAApD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,OAAO,EAAC,KAAlB;AAAwB,UAAA,GAAG,EAAE,uCAAqCN,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBO,IAAxD,GAA6D;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAA,qBACKP,OAAO,CAACQ,IAAR,CAAaC,GAAb,GAAmB,GADxB,YAGKT,OAAO,CAACU,MAAR,GAAiB,GAHtB,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBACKV,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBW,WAAnB,CAA+BC,WAA/B;AADL;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,OAAWX,CAAX;AAAA;AAAA;AAAA;AAAA,YAFP,CARL,eA+BI;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA,kBADJ;AAmCH;;GA7DQnB,O;UAC2BL,U,EACjBG,O;;;KAFVE,O;AA+DT,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useWeather} from \"../Context/WeatherContext\";\r\nimport axios from \"axios\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport {useCity} from \"../Context/CityContext\";\r\nimport { Alert } from 'bootstrap';\r\n\r\nfunction Weather() {\r\n    const {weathers, setWeathers} = useWeather();\r\n    const {city} = useCity();\r\n    const [show, setShow] = useState(false);\r\n    \r\n    const getCoordinate = async () => {\r\n        await axios(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`)\r\n            .then((res) => {\r\n                getWeatherData(res.data.coord.lon,res.data.coord.lat)\r\n            }\r\n        )\r\n    }\r\n    useEffect(()=>{\r\n        getCoordinate()\r\n    })\r\n\r\n    const getWeatherData = async (lon,lat) => {\r\n        await axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=imperial&exclude=hourly,minutely,current&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`)\r\n            .then((res) => {\r\n                setShow(false);\r\n                setWeathers(res.data.daily)\r\n            }).catch((err)=>{\r\n                setShow(true);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n   \r\n                if (show) {\r\n                           <div class=\"alert alert-danger\" role=\"alert\">\r\n                           This is a danger alert—check it out!\r\n                         </div>\r\n                }\r\n\r\n            {weathers.map((weather,i)=>(\r\n\r\n                    <Card key={i} style={i === 1 ? {width: '9.5rem'} : {width:\"10.5rem\"}}>\r\n                        <Card.Body>\r\n                            <Card.Title>   {new Date(weather.dt * 1000).toLocaleString(\"en-EN\", {\r\n                                weekday: \"long\"\r\n                            })}</Card.Title>\r\n                            <Card.Img variant=\"top\" src={\"https://openweathermap.org/img/wn/\"+weather.weather[0].icon+\"@2x.png\"} />\r\n\r\n                            <Card.Text>\r\n                                {weather.temp.day + \"°\"}\r\n                                &ensp;\r\n                                {weather.clouds + \"°\"}\r\n                                <br/>\r\n                                <span>\r\n                                    {weather.weather[0].description.toLowerCase()}\r\n                                </span>\r\n\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            )}\r\n            <br/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}