{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayse.elgoren\\\\Desktop\\\\React\\\\weather-app\\\\src\\\\Components\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useWeather } from \"../Context/WeatherContext\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\nimport { useCity } from \"../Context/CityContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const {\n    weathers,\n    setWeathers\n  } = useWeather();\n  const {\n    city\n  } = useCity();\n  const days = [\"Pazartesi\", \"Salı\", \"Çarşamba\", \"Perşembe\", \"Cuma\", \"Cumartesi\", \"Pazar\"];\n  useEffect(() => {\n    getCoordinate();\n  }, [city]);\n\n  const getCoordinate = async () => {\n    await axios(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`).then(res => {\n      console.log(res.data);\n      getWeatherData(res.data.coord.lon, res.data.coord.lat);\n    });\n  };\n\n  const getWeatherData = async (lon, lat) => {\n    await axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely,current&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`).then(res => {\n      console.log(res.data.daily); //setWeathersList([...weathersList,res.data.daily])\n      //setWeather([...weather,res.data.daily]);\n\n      setWeathers(res.data.daily);\n    });\n  };\n\n  console.log(weathers);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [weathers.map((weather, i) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '11rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\"   \", new Date(weather.dt * 1000).toLocaleString(\"tr-TR\", {\n            weekday: \"long\"\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: \"https://openweathermap.org/img/wn/\" + weather.weather[0].icon + \"@2x.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"sadds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Weather, \"sOwEjdlTFT683aUe+ttAtrFGITI=\", false, function () {\n  return [useWeather, useCity];\n});\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/ayse.elgoren/Desktop/React/weather-app/src/Components/Weather.js"],"names":["React","useEffect","useWeather","axios","Card","useCity","Weather","weathers","setWeathers","city","days","getCoordinate","then","res","console","log","data","getWeatherData","coord","lon","lat","daily","map","weather","i","width","Date","dt","toLocaleString","weekday","icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,OAAR,QAAsB,wBAAtB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BN,UAAU,EAA1C;AACA,QAAM;AAACO,IAAAA;AAAD,MAASJ,OAAO,EAAtB;AACA,QAAMK,IAAI,GAAG,CAAC,WAAD,EAAa,MAAb,EAAoB,UAApB,EAA+B,UAA/B,EAA0C,MAA1C,EAAiD,WAAjD,EAA6D,OAA7D,CAAb;AACAT,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,aAAa;AAChB,GAFQ,EAEP,CAACF,IAAD,CAFO,CAAT;;AAIA,QAAME,aAAa,GAAG,YAAY;AAC9B,UAAMR,KAAK,CAAE,qDAAoDM,IAAK,iDAA3D,CAAL,CACDG,IADC,CACKC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,MAAAA,cAAc,CAACJ,GAAG,CAACG,IAAJ,CAASE,KAAT,CAAeC,GAAhB,EAAoBN,GAAG,CAACG,IAAJ,CAASE,KAAT,CAAeE,GAAnC,CAAd;AACH,KAJC,CAAN;AAMH,GAPD;;AASA,QAAMH,cAAc,GAAG,OAAOE,GAAP,EAAWC,GAAX,KAAmB;AACtC,UAAMjB,KAAK,CAAE,uDAAsDiB,GAAI,QAAOD,GAAI,iFAAvE,CAAL,CACDP,IADC,CACKC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASK,KAArB,EADW,CAEX;AACA;;AAEAb,MAAAA,WAAW,CAACK,GAAG,CAACG,IAAJ,CAASK,KAAV,CAAX;AAEH,KARC,CAAN;AASH,GAVD;;AAWAP,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,sBACI;AAAA,eAEKA,QAAQ,CAACe,GAAT,CAAa,CAACC,OAAD,EAASC,CAAT,kBAEN,QAAC,IAAD;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAArB;AAAA,6BACI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,4BAAgB,IAAIC,IAAJ,CAASH,OAAO,CAACI,EAAR,GAAa,IAAtB,EAA4BC,cAA5B,CAA2C,OAA3C,EAAoD;AAChEC,YAAAA,OAAO,EAAE;AADuD,WAApD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,OAAO,EAAC,KAAlB;AAAwB,UAAA,GAAG,EAAE,uCAAqCN,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBO,IAAxD,GAA6D;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,OAAWN,CAAX;AAAA;AAAA;AAAA;AAAA,YAFP,CAFL,eAkBI;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA,kBADJ;AAsBH;;GAnDQlB,O;UAC2BJ,U,EACjBG,O;;;KAFVC,O;AAqDT,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useWeather} from \"../Context/WeatherContext\";\r\nimport axios from \"axios\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport {useCity} from \"../Context/CityContext\";\r\n\r\nfunction Weather() {\r\n    const {weathers, setWeathers} = useWeather();\r\n    const {city} = useCity();\r\n    const days = [\"Pazartesi\",\"Salı\",\"Çarşamba\",\"Perşembe\",\"Cuma\",\"Cumartesi\",\"Pazar\"]\r\n    useEffect(()=>{\r\n        getCoordinate()\r\n    },[city])\r\n\r\n    const getCoordinate = async () => {\r\n        await axios(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                getWeatherData(res.data.coord.lon,res.data.coord.lat)\r\n            }\r\n        )\r\n    }\r\n\r\n    const getWeatherData = async (lon,lat) => {\r\n        await axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely,current&lang=tr&appid=4c87fdde1f3bfe4993325a6ae948e319`)\r\n            .then((res) => {\r\n                console.log(res.data.daily)\r\n                //setWeathersList([...weathersList,res.data.daily])\r\n                //setWeather([...weather,res.data.daily]);\r\n\r\n                setWeathers(res.data.daily)\r\n\r\n            })\r\n    }\r\n    console.log(weathers)\r\n    return (\r\n        <>\r\n\r\n            {weathers.map((weather,i)=>(\r\n\r\n                    <Card key={i} style={{ width: '11rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>   {new Date(weather.dt * 1000).toLocaleString(\"tr-TR\", {\r\n                                weekday: \"long\"\r\n                            })}</Card.Title>\r\n                            <Card.Img variant=\"top\" src={\"https://openweathermap.org/img/wn/\"+weather.weather[0].icon+\"@2x.png\"} />\r\n\r\n                            <Card.Text>\r\n                                sadds\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            )}\r\n            <br/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}